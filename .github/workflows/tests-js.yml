# -*- coding: utf-8 -*-
#
# Copyright (C) 2024 CERN.

name: Node CI

on:
  workflow_call:
    inputs:
      node-version:
        description: "Node versions"
        type: string
        default: '["22.x"]'
      js-working-directory:
        description: "Working directory"
        type: string
        # Example value:
        #   default: "./invenio_foobar/assets/semantic-ui/js/invenio_foobar"
      translations-working-directory:
        description: "Working directory"
        type: string
        # Example value:
        #   default: "./invenio_foobar/assets/semantic-ui/translations/invenio_foobar"

jobs:
  Tests:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        node-version: ${{ fromJson(inputs.node-version) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # TODO: Needs to have a `package-lock.json`
          # cache: npm

      - name: Run eslint test
        run: ./run-js-linter.sh -i

      - name: Determine JS translation directory
        id: determine_js_path
        run: |
          PACKAGE_NAME=$(basename "$PWD" | tr '-' '_')
          APP_RDM_TRANSLATIONS_PATH="$PACKAGE_NAME/theme/assets/semantic-ui/translations/$PACKAGE_NAME"
          DEFAULT_TRANSLATIONS_PATH="$PACKAGE_NAME/assets/semantic-ui/translations/$PACKAGE_NAME"

          if [ -f "$APP_RDM_TRANSLATIONS_PATH/package.json" ]; then
            echo "Found package.json in theme path: $APP_RDM_TRANSLATIONS_PATH"
            echo "translation_dir=$APP_RDM_TRANSLATIONS_PATH" >> $GITHUB_OUTPUT # make path visible to subsequent steps
          elif [ -f "$DEFAULT_TRANSLATIONS_PATH/package.json" ]; then
            echo "Found package.json in default path: $DEFAULT_TRANSLATIONS_PATH"
            echo "translation_dir=$DEFAULT_TRANSLATIONS_PATH" >> $GITHUB_OUTPUT
          else
            echo "No JS translation directory found"
            echo "translation_dir=" >> $GITHUB_OUTPUT
          fi

      - name: Build frontend translations
        if: ${{ steps.determine_js_path.outputs.translation_dir != '' }}
        working-directory: ${{ steps.determine_js_path.outputs.translation_dir }}
        run: |
          npm ci
          npm list
          npm run compile_catalog
          echo "cleaning up node_modules and dev files..."
          rm -rf node_modules scripts
          rm -f package-lock.json i18next-scanner.config.js
          echo "Cleaned up frontend build artifacts and development dependencies."

      - name: Install deps for frontend tests
        if: ${{ inputs.js-working-directory != '' }}
        working-directory: ${{ inputs.js-working-directory }}
        run: |
          npm install
          npm list

      - name: Run frontend tests
        if: ${{ inputs.js-working-directory != '' }}
        working-directory: ${{ inputs.js-working-directory }}
        run: npm test
